[core]
    editor = vim
    pager =
    autocrlf = input
    whitespace = fix,space-before-tab,tab-in-indent,trailing-space
    # Prevent OSX's revisiond daemon to mess up with our files.
    # See: http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/
    trustctime = false
[user]
	name = Kevin Deldycke
	email = kevin@deldycke.com
[color]
	diff = auto
	status = auto
	branch = auto
    ui = auto
[apply]
    whitespace = fix
[diff]
    renames = copies
    # Source: http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
    algorithm = patience
[pull]
    rebase = true
[push]
    # Prevent accidental pushes to branches which youâ€™re not ready to push yet.
    # Source: http://mislav.uniqpath.com/2010/07/git-tips/
    default = tracking
[merge]
    log = true
[branch]
    autosetuprebase = remote
[alias]
    br = branch
    ci = commit
    co = checkout
    df = diff
    g  = grep -I
    lg = log -p
    pp = !"echo 'Pull'; git pull; echo 'Push'; git push"
    rb = rbranch
    rv = review
    st = status
    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph --abbrev-commit --decorate
    # View the current working tree status using the short format
    s = status -sb
    # Show the diff between the latest commit and the current state
    d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
    # `git di $number` shows the diff between the state `$number` revisions ago and the current state
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
    # Pull in remote changes for the current repository and all its submodules
    p = !"git pull; git submodule foreach git pull origin master"
    # Clone a repository including all submodules
    c = clone --recursive
    # Commit all changes
    ca = !git add -A && git commit -av
    # Switch to a branch, creating it if necessary
    go = checkout -B
    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v
    # Credit an author on the latest commit
    credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
    # Interactive rebase with the given number of latest commits
    reb = "!r() { git rebase -i HEAD~$1; }; r"
[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
    insteadOf = "github:"
[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
    insteadOf = "gist:"
